name: Docker Image CI

on:
  push:
    branches: [ "main" ]

env:
  DOCKER_USER: ${{ secrets.DOCKER_USER }} # Docker Registry
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }} # Docker Registry
  GITHUB_WORKSPACE: ${{ github.workspace }}
  IMAGE_NAME: stanhoe/tasky:demo
  
jobs:
  # SCA & IaC scan before building into image
  code-scan: 
    name: Code Scan
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
    - name: Run Trivy vulnerability scanner in fs mode
      uses: aquasecurity/trivy-action@0.28.0
      with:
        scan-type: 'fs'
        format: 'table'
        # exit-code: '1'
        # ignore-unfixed: true
        # severity: 'CRITICAL,HIGH'
        
  build:
    # Build into container image and scan it before pushing into container registry 
    name: Build, Scan, and Push Image
    needs: code-scan
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag $IMAGE_NAME  

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@0.28.0
      with:
        image-ref: 'stanhoe/tasky:demo'
        format: 'table'
        # exit-code: '1'
        # ignore-unfixed: true
        # vuln-type: 'os,library'
        # severity: 'CRITICAL,HIGH'

    - name: Push Docker image to repository
      run: |
        docker login --username $DOCKER_USER --password $DOCKER_PASSWORD
        docker push $IMAGE_NAME

  deploy:
      name: Deploy to EKS
      needs: build
      runs-on: ubuntu-24.04
      steps:
      - name: Check out code
        uses: actions/checkout@v4

      # - name: Install AWS Cli
      #   run: |
      #     curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      #     unzip awscliv2.zip
      #     sudo ./aws/install
    
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{env.AWS_REGION}}

      - name: Update kube config
        run: |
          aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

      - name: Deploy to EKS
        run: |
          kubectl apply -f manifests/hello-app-deployment.yaml
          kubectl apply -f manifests/hello-app-service.yaml
        


